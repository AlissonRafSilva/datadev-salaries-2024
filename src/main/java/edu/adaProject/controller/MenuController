package edu.adaProject.controller;

import java.text.DecimalFormat;
import java.util.Map;

public class MenuController {
    DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");
    SalaryService salaryService = new SalaryService();

    public void showMenu() {
        System.out.println(
                "\nSelecione uma opção no menu abaixo: \n" +
                "1 - Descrição dos dados\n" +
                "2 - Qual a média salarial dos profissionais de dados?\n" +
                "3 - Qual o maior salário registrado?\n" +
                "4 - Qual a média salarial dos profissionais juniores?\n" +
                "5 - Qual diferença salarial entre trabalho presencial e " +
                        "remoto entre os cargos?\n" +
                "6 - Qual cargo apresenta a maior média salarial?\n" +
                "7 - Em qual localização estão concentrados os maiores salários?\n" +
                "8 - Quantos profissionais reportaram salários na empresa com a maior média salarial?\n" +
                "9 - Qual localização possui o maior número de salários reportados?\n" +
                "10 - Quantas empresas são classificadas como grandes (L) nesta base de dados?\n" +
                "11 - Qual cargo tem o maior e o menor número de ocorrências?\n" +
                "12 - Qual a média salarial dos profissionais que trabalham em empresas pequenas (P)?\n" +
                "0 - Sair");
    }

    public void showDataDescription() {
        System.out.printf("O conjunto de dados de 2024 sobre salários e " +
                "atributos de emprego dos desenvolvedores de dados  oferece " +
                "informações sobre o cenário em evolução \ndos " +
                "desenvolvedores de dados. Inclui variáveis-chave como " +
                "salário, cargo, nível de experiência, tipo de emprego, " +
                "residência do funcionário, proporção \n de trabalho remoto, " +
                "localização da empresa e tamanho da empresa. Esses dados permitem "
                + "análises detalhadas de tendências salariais, padrões de " +
                "emprego\n e variações geográficas em funções de engenharia " +
                "de dados. Pesquisadores, analistas e organizações podem aproveitar esse conjunto de "
                + "dados para\n compreender melhor as tendências de " +
                "remuneração, a distribuição das funções de desenvolvedor de " +
                "dados em diferentes regiões e o impacto do trabalho\n remoto" +
                " e do tamanho da empresa no emprego nesta área.\n"
                + "\nOs campos presentes são:\n"
                + " - *Nível de Experiência*: Júnior(EN), Pleno(MI), Sênior" +
                "(SE), Master(EX)\n"
                + " - *Tipo de contrato de trabalho*: tempo integral(FT), " +
                "meio período(PT), contrato(CT), Freelance(FL)\n"
                + " - *Cargo*: Engenheiro de Dados (Data Engineer), Cientista" +
                " de Dados (Data Scientist), "
                + "Analista de Dados (Data Analyst), Engenheiro de Aprendizado de Máquina (Machine Learning Engineer), "
                + "Cientista Pesquisador (Research Scientist)\n"
                + " - *Salário* (salary)\n"
                + " - *Moeda do Salário* (salary_currency): A moeda na qual " +
                "o salário é pago\n"
                + " - *Salário em dólares* (salary_in_usd): O valor do " +
                "salário convertido em dólares\n"
                + " - *Residência do empregado* (employee_residence): Local " +
                "de residência do empregado\n"
                + " - *Proporção de trabalho remoto* (remote_ratio): " +
                "Percentual de trabalho realizado remotamente\n"
                + " - *Localização da empresa* (company_location): " +
                "Localização geográfica da empresa\n");
    }

    public void calcularMediaSalarial() {
        double mediaSalarial = salaryService.calcularMediaSalarial();
        String mediaFormatada = decimalFormat.format(mediaSalarial);
        System.out.println("A média salarial anual dos " +
                "profissionais de é de: US$ " + mediaFormatada);
    }

    public void calcularMaiorSalario() {
        double maiorSalario = salaryService.calcularMaiorSalario();
        String valorFormatado = decimalFormat.format(maiorSalario);
        System.out.println("O maior salário anual registrado é de: US$ " + valorFormatado);
    }

    public void calcularMediaSalarialJuniores() {
        double mediaSalarialJuniores = salaryService.calcularMediaSalarialJuniores();
        String mediaFormatada = decimalFormat.format(mediaSalarialJuniores);
        System.out.println("A média salarial anual dos profissionais juniores é de: US$ " + mediaFormatada);
    }

    public void calcularDiferencaSalarialRemotoEPresencial() {
        Map<String,Double> salariosRemotos =
                salaryService.cargoMaximoSalarialRemoto();
        Map<String,Double> salariosPresenciais =
                salaryService.cargoMaximoSalarialPresencial();

        System.out.printf("%-40s %-20s %-20s %-20s%n", "Cargo", "Salário " +
                "Remoto (US$)", "Salário Presencial (US$)", "Diferença (%)");
        salariosRemotos.forEach((cargo, salarioRemoto) -> {
            double salarioPresencial = salariosPresenciais.getOrDefault(cargo
                    , 0.0);
            if (salarioPresencial == 0.0 || salarioRemoto == 0.0) return;
            double diferenca = (salarioRemoto / salarioPresencial - 1) * 100;
            System.out.printf("%-40s %-20.2f %-20.2f %-20.2f%n", cargo,
                    salarioRemoto, salarioPresencial, diferenca);
        });
    }

    public void calcularMaiorMediaSalarial() {
        String maiorMediaSalarial = salaryService.cargoMaximoSalarial();
        System.out.println("O cargo que apresenta a maior média salarial é: " + maiorMediaSalarial);
    }
}
